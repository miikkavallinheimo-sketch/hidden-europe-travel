---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';

// Get all blog posts
const allPosts = await getCollection('blog');

// Sort posts by date
const sortedPosts = allPosts.sort((a: any, b: any) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

// Group posts by category
const postsByCategory = {
  'destination-guide': sortedPosts.filter((post: any) => post.data.category === 'destination-guide'),
  'hotel-review': sortedPosts.filter((post: any) => post.data.category === 'hotel-review'),
  'travel-tips': sortedPosts.filter((post: any) => post.data.category === 'travel-tips'),
};
---

<Layout
  title="Articles - Hidden Europe"
  description="Discover unique travel stories, destination guides, and hotel reviews from Hidden Europe."
>
  <Navigation />

  <main>
    <section class="hero">
      <div class="hero-content">
        <h1>Travel Stories & Guides</h1>
        <p>Discover unique perspectives on Europe's hidden treasures</p>
      </div>
    </section>

    <section class="articles">
      <div class="container">
        {Object.entries(postsByCategory).map(([category, posts]) => (
          <div class="category-section">
            <h2>{category.replace('-', ' ')}</h2>
            <div class="article-grid">
              {posts.map((post: any) => (
                <article class="article-card">
                  <a href={`/articles/${post.slug}`} class="article-link">
                    {post.data.heroImage && (
                      <img src={post.data.heroImage} alt={post.data.title} class="article-image" />
                    )}
                    <div class="article-content">
                      <span class="category">{post.data.category.replace('-', ' ')}</span>
                      <h3>{post.data.title}</h3>
                      <p>{post.data.description}</p>
                      <div class="article-meta">
                        <span class="author">{post.data.author}</span>
                        {post.data.readingTime && (
                          <span class="reading-time">{post.data.readingTime} min read</span>
                        )}
                      </div>
                    </div>
                  </a>
                </article>
              ))}
            </div>
          </div>
        ))}
      </div>
    </section>
  </main>
</Layout>

<style>
  .hero {
    background: linear-gradient(135deg, var(--cal-poly-green) 0%, var(--viridian) 100%);
    color: white;
    padding: 6rem 2rem;
    text-align: center;
  }

  .hero h1 {
    font-size: 3.5rem;
    margin-bottom: 1rem;
    font-weight: 300;
  }

  .hero p {
    font-size: 1.3rem;
    opacity: 0.9;
  }

  .articles {
    padding: 4rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .category-section {
    margin-bottom: 4rem;
  }

  .category-section h2 {
    color: var(--cal-poly-green);
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-transform: capitalize;
    font-weight: 300;
  }

  :root.dark .category-section h2 {
    color: var(--card-title);
  }

  .article-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .article-card {
    background: var(--bg-primary);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: transform 0.3s;
  }

  :root.dark .article-card {
    background: var(--bg-secondary);
  }

  .article-card:hover {
    transform: translateY(-5px);
  }

  .article-link {
    text-decoration: none;
    color: inherit;
  }

  .article-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .article-content {
    padding: 1.5rem;
  }

  .category {
    color: var(--cal-poly-green);
    font-size: 0.9rem;
    text-transform: capitalize;
  }

  :root.dark .category {
    color: var(--bright-blue);
  }

  .article-content h3 {
    font-size: 1.5rem;
    margin: 0.5rem 0;
    color: var(--text-primary);
    font-weight: 500;
  }

  :root.dark .article-content h3 {
    color: var(--card-title);
  }

  .article-content p {
    color: var(--text-secondary);
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  :root.dark .article-content p {
    color: var(--card-text);
  }

  .article-meta {
    display: flex;
    justify-content: space-between;
    color: var(--text-secondary);
    font-size: 0.9rem;
  }

  :root.dark .article-meta {
    color: var(--card-text-secondary);
  }

  @media (max-width: 768px) {
    .hero h1 {
      font-size: 2.5rem;
    }

    .article-grid {
      grid-template-columns: 1fr;
    }
  }
</style>